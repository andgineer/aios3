# This workflows will upload a Python Package when a version tag is pushed using build system from pyproject.toml
# To publish new version use `scripts/verup.sh`
# Put you pypi credentials (PYPI_USERNAME, PYPI_PASSWORD) into the github repository secrets

name: Publish Python PIP Package on pypi and create github release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set version var
      run: |
        echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/^v//')" >> $GITHUB_ENV
        echo $RELEASE_VERSION

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}
        packages_dir: dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        body: https://pypi.org/project/aios3/${{ env.RELEASE_VERSION }}/
        draft: false
        prerelease: false
